/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei';
import {useBox} from '@react-three/cannon';
import { addObjectToTransformQueue } from '../../action';

export default function Model({buildState,dispatch,...props}) {
//   const group = useRef()
  const { nodes, materials } = useGLTF('/assets/nature/Cube_Grass_Single.gltf')
  const [ref] = useBox(()=> ({
        type: 'Static',
        position: props.position,
        args: [1, 1, 1]
  }))

  return (
    <mesh userData={{type: "grassCube"}} ref={ref} {...props} dispose={null}
        onPointerMove={(e)=>{
            e.stopPropagation()
            // console.log("THIS IS THE FACE INDEX",e.faceIndex);
            // console.log(props.position)
        }}

        onClick={()=>{
            if (buildState==="rotate"){

              // addObjectToTransformQueue()
            }else if(buildState==="translate"){

              // addObjectToTransformQueue 

            }
        }}
    >
      <boxBufferGeometry attach='geometry'></boxBufferGeometry>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube276.geometry}
        material={materials.Green_Light}
        // onPointerMove={(e)=>{
        //     e.stopPropagation(),
        //     console.log("hover over top", e.faceIndex)
        //     // console.log("THIS IS THE FACE top INDEX",e.faceIndex);
        // }}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube276_1.geometry}
        material={materials.Dirt_1}
        // onPointerMove={(e)=>{
        //     e.stopPropagation(),
        //     console.log("hover over side 1")
        //     // console.log("THIS IS THE FACE top INDEX",e.faceIndex);
        // }}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube276_2.geometry}
        material={materials.Dirt_2}
        // onPointerMove={(e)=>{
        //     e.stopPropagation(),
        //     console.log("hover on side 2")
        //     // console.log("THIS IS THE FACE top INDEX",e.faceIndex);
        // }}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube276_3.geometry}
        material={materials.Dirt_3}
        // onPointerMove={(e)=>{
        //     e.stopPropagation(),
        //     console.log("hover on side 3")
        //     // console.log("THIS IS THE FACE top INDEX",e.faceIndex);
        // }}
      />
    </mesh>
  )
}

useGLTF.preload('/assets/nature/Cube_Grass_Single.gltf')